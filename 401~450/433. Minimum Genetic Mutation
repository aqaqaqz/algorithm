class Solution {
    unordered_map<string, vector<string>> m;
    void makeList(vector<string> &bank, string str){
        for(int i=0;i<bank.size();i++){
            string &b = bank[i];
            int cnt = diff(b, str);
            if(cnt == 1){
                m[str].push_back(b);
                bank[i] = bank.back();
                bank.pop_back();
                i--;
            }
        }
    }
    int diff(string &str1, string &str2){
        int cnt = 0;
        for(int i=0;i<8;i++)
            if(str1[i] != str2[i]) cnt++;
        return cnt;
    }
public:
    int minMutation(string start, string end, vector<string>& bank) {
        if(start == end) return 0;
        vector<string> v;
        for(string &str : bank){
            if(str == end){
                v.push_back(str);
                str = bank.back();
                bank.pop_back();
                break;
            }
        }
        if(v.empty()) return -1;
        
        int cnt = 0;
        while(true){
            vector<string> temp;
            for(string str : v){
                if(diff(start, str) == 1) return cnt+1;
                makeList(bank, str);
                for(string s : m[str])
                    temp.push_back(s);
            }
            v = temp;
            cnt++;

            if(v.empty()) break;
        }
        return -1;
    }
};