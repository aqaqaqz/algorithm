class Solution {
public:
    vector<double> calcEquation(vector<pair<string, string>> e, vector<double>& v, vector<pair<string, string>> queries) {
        unordered_map<string, unordered_map<string, double>> m;
        for(int i=0;i<e.size();i++){
            m[e[i].first][e[i].second] = v[i];
            m[e[i].second][e[i].first] = (double)1/v[i];
            m[e[i].first][e[i].first] = 1;
            m[e[i].second][e[i].second] = 1;
        }
        bool check = true;
        while(check){
            check = false;
            for(auto iter = m.begin();iter!=m.end();iter++){
                for(auto div = iter->second.begin();div!=iter->second.end();div++){
                    unordered_map<string, double> temp = m[div->first];
                    string a = iter->first;
                    double aVal = m[a][div->first];
                    for(auto next = m[div->first].begin();next!=m[div->first].end();next++){
                        if(!m[a][next->first]){
                            check = true;
                            m[a][next->first] = aVal*next->second;
                            m[next->first][a] = 1/m[a][next->first];
                        }
                    }
                }
            }
        }
        
        vector<double> result;
        for(pair<string, string> p : queries){
            result.push_back(m[p.first][p.second]);
            if(result.back() == 0) result[result.size()-1] = -1;
        }
        return result;
    }
};