class Solution {
public:
    int lengthLongestPath(string input) {
        vector<string> v;
        int len = 0;
        int result = 0;
        
        for(int i=0;i<input.size();i++){
            while(input[i] == '\n'){ i++; }
            
            int cnt = 0;
            while(input[i]=='\t'){ cnt++; i++; }
            
            string temp = "";
            while(input.size()>i && input[i]!='\n'){
                temp += input[i];
                i++;
            }
            
            for(int i=v.size();i>cnt;i--){
                len -= v.back().size();
                v.pop_back();
            }
            
            if(temp.find('.')<temp.size()){
                result = max(result, (int)(len+temp.size()+v.size()));
            }else{
                v.push_back(temp);
                len += v.back().size();
            }
        }
        
        return result;
    }
};