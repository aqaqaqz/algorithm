class MyHeap{
public:
    bool operator() (pair<int, int> a, pair<int, int> b){
        return a.second < b.second;
    }
};

class Solution {
    static bool mySort(pair<int, int> a, pair<int, int> b){
        return a.first < b.first;
    }
public:
    int maxWidthRamp(vector<int>& A) {
        vector<pair<int, int>> v;
        priority_queue<pair<int, int>, vector<pair<int, int>>, MyHeap> pq;
        int idx = 0;
        for(int n : A){
            v.push_back(pair<int, int>(n, idx++));
            pq.push(v.back());
        }
        sort(v.begin(), v.end(), mySort);
        
        int result = 0;
        for(pair<int, int> p : v){
            while(p.first > pq.top().first) pq.pop();
            result = max(result, pq.top().second - p.second);
        }
        return result;
    }
};