/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        stack<int> s;
        ListNode* front = head;
        ListNode* temp;
        
        int count = 0;
        while(head != NULL){      
            if(count%k==0){
                temp = head;
            }
            
            s.push(head->val);
            head = head->next;
            count++;
            
            if(count%k==0 && count!=0){
                for(int i=0;i<k;i++){
                    temp->val = s.top();
                    s.pop();
                    temp = temp->next;
                }
            }            
        }
        
        return front;
    }
};