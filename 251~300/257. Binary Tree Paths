/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
    vector<string> result;
    TreeNode *r;
public:
    vector<string> binaryTreePaths(TreeNode* root) {
        if(root == NULL) return result;
        r = root;
        
        makeTreePaths("", root);
        
        return result;
    }
    
    void makeTreePaths(string path, TreeNode *node){
        path += ( (r==node?"":"->") + to_string(node->val));
        if(node->left==NULL && node->right==NULL){
            result.push_back(path);
            return;
        }
        if(node->left != NULL)
            makeTreePaths(path, node->left);
        if(node->right != NULL)
            makeTreePaths(path, node->right);
    }
};