class Solution {
public:
    vector<int> kWeakestRows(vector<vector<int>>& mat, int k) {
        vector<pair<int, int>> v;
        for(int i=0;i<mat.size();i++){
            int cnt = 0;
            for(const int& n : mat[i])
                if(n==1) cnt++;
                else break;
            v.push_back(make_pair(cnt, i));
        }
        sort(v.begin(), v.end(), [](const pair<int, int>& p1, const pair<int, int>& p2){
            if(p1.first==p2.first) return p1.second<p2.second;
            return p1.first<p2.first;
        });
        vector<int> result;
        for(int i=0;i<k;i++)
            result.push_back(v[i].second);
        return result;
    }
};
