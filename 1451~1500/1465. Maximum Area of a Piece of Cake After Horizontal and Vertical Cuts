class Solution {
public:
    int maxArea(int h, int w, vector<int>& horizontalCuts, vector<int>& verticalCuts) {
        if(horizontalCuts.empty() || verticalCuts.empty()) return -1;
        int mod = 1e9+7;
        sort(horizontalCuts.begin(), horizontalCuts.end());
        sort(verticalCuts.begin(), verticalCuts.end());
        long long maxH = h - horizontalCuts.back();
        long long maxW = w - verticalCuts.back();
        for(int i=0;i<horizontalCuts.size();i++)
            maxH = max((int)maxH, horizontalCuts[i]-(i==0?0:horizontalCuts[i-1]));
        for(int i=0;i<verticalCuts.size();i++)
            maxW = max((int)maxW, verticalCuts[i]-(i==0?0:verticalCuts[i-1]));
        return maxW*maxH%mod;
    }
};