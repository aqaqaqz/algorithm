/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    int result = 0;
    bool checkPanlin(vector<int>& v){
        int odd = 0;
        for(int n : v){
            if(n==0) continue;
            if(n%2 == 1) odd++;
        }
        if(odd>1) return false;
        return true;
    }
    void visitNode(TreeNode* n, vector<int>& v){
        if(n==nullptr) return;
        v[n->val]++;
        if(n->left==nullptr && n->right==nullptr)
            result += (checkPanlin(v)?1:0);

        visitNode(n->left, v);
        visitNode(n->right, v);
        v[n->val]--;
    }
public:
    int pseudoPalindromicPaths (TreeNode* root) {
        vector<int> v(10, 0);
        visitNode(root, v);
        return result;
    }
};