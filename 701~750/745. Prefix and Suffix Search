class WordFilter {
    unordered_map<string, int> m;
public:
    WordFilter(vector<string>& words) {
        for(int i=0;i<words.size();i++){        
            for(int s=0;s<=words[i].size();s++){
                for(int e=0;e<=words[i].size();e++){
                    m[words[i].substr(0, s)+"|"+words[i].substr(words[i].size()-e)] = i;
                }
            }
        }
    }
    
    int f(string prefix, string suffix) {
        if(m.find(prefix+"|"+suffix) == m.end()) 
            return -1;
        return m[prefix+"|"+suffix];
    }
};

/**
 * Your WordFilter object will be instantiated and called as such:
 * WordFilter* obj = new WordFilter(words);
 * int param_1 = obj->f(prefix,suffix);
 */