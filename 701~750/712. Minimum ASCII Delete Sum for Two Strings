class Solution {
    int getResult(vector<vector<int>>& c, string& s1, string& s2, int p1, int p2){
        if(p1==s1.size()){
            c[p1][p2] = 0;
            for(int i=p2;i<s2.size();i++)
                c[p1][p2] += s2[i];
            return c[p1][p2];
        }else if(p2== s2.size()){
            c[p1][p2] = 0;
            for(int i=p1;i<s1.size();i++)
                c[p1][p2] += s1[i];
            return c[p1][p2];
        }
        if(c[p1][p2] != -1) return c[p1][p2];
        
        if(s1[p1] == s2[p2])
            c[p1][p2] = getResult(c, s1, s2, p1+1, p2+1);
        else{
            c[p1][p2] = getResult(c, s1, s2, p1+1, p2) + s1[p1];
            c[p1][p2] = min(c[p1][p2], getResult(c, s1, s2, p1, p2+1) + s2[p2]);
        }
        
        return c[p1][p2];
    }
public:
    int minimumDeleteSum(string s1, string s2) {
        vector<vector<int>> c(s1.size()+1, vector<int>(s2.size()+1, -1));
        return getResult(c, s1, s2, 0, 0);
    }
};