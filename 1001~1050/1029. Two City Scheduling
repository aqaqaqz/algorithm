class Solution {
    int findMinCost(vector<vector<int>>& c, vector<vector<vector<int>>>& cache, int a, int b, int p){
        if(p>=c.size()) return 0;
        if(cache[p][a][b] != -1) return cache[p][a][b];
        
        if(c.size()/2 == a)
            cache[p][a][b] = c[p][1] + findMinCost(c, cache, a, b+1, p+1);
        else if(c.size()/2 == b)
            cache[p][a][b] = c[p][0] + findMinCost(c, cache, a+1, b, p+1);
        else
            cache[p][a][b] = min(c[p][1] + findMinCost(c, cache, a, b+1, p+1), c[p][0] + findMinCost(c, cache, a+1, b, p+1));
        return cache[p][a][b];
    }
public:
    int twoCitySchedCost(vector<vector<int>>& costs) {
        vector<vector<vector<int>>> cache(costs.size(), vector<vector<int>>(costs.size(), vector<int>(costs.size(), -1)));
        return findMinCost(costs, cache, 0, 0, 0);
    }
};