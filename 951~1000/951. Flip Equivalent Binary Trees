/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    bool flipEquiv(TreeNode* r1, TreeNode* r2) {
        if(r1==NULL && r2==NULL) return true;
        if(r1==NULL || r2==NULL) return false;
        if(r1->val != r2->val) return false;
        
        bool temp = flipEquiv(r1->left, r2->left);
        temp = temp && flipEquiv(r1->right, r2->right);

        if(!temp){
            TreeNode *tNode = r1->left;
            r1->left = r1->right;
            r1->right = tNode;

            temp = flipEquiv(r1->left, r2->left);
            temp = temp && flipEquiv(r1->right, r2->right);
        }

        return temp;
    }
};