class Solution {
    int getMatch(string& s, string& p, vector<vector<int>>& c, int sp, int pp){
        if(sp==s.size() && pp==p.size()) return 1;
        if(sp==s.size() || pp==p.size()){
            if(sp==s.size()){
                while(pp<p.size() && p[pp]=='*') pp++;
            }
            if(sp==s.size() && pp==p.size()) return 1;
            return 0;
        }
        if(c[sp][pp] != -1) return c[sp][pp];
        
        if(p[pp]=='*'){
            c[sp][pp] = 0;
            for(int i=sp;i<s.size()+1;i++){
                if(getMatch(s, p, c, i, pp+1)){
                    c[sp][pp] = 1;
                    break;
                }
            }
        }else if(p[pp]=='?'){
            c[sp][pp] = getMatch(s, p, c, sp+1, pp+1);
        }else{
            if(s[sp]==p[pp]) c[sp][pp] = getMatch(s, p, c, sp+1, pp+1);
            else c[sp][pp] = 0;
        }
        return c[sp][pp];
    }
public:
    bool isMatch(string s, string p) {
        vector<vector<int>> c(s.size(), vector<int>(p.size(), -1));
        return getMatch(s, p, c, 0, 0)==1;
    }
};