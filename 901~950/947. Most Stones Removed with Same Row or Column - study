class Solution {
    unordered_map<int, vector<int>> xm;
    unordered_map<int, vector<int>> ym;
    int makeGrp(vector<vector<int>>& stones, int p, vector<int>& grp, int nGrp){
        if(grp[p] != -1) return 0;
        
        int cnt = 1;
        grp[p] = nGrp;
        for(int np : xm[stones[p][0]])
            cnt += makeGrp(stones, np, grp, nGrp);
        for(int np : ym[stones[p][1]])
            cnt += makeGrp(stones, np, grp, nGrp);
        
        return cnt;
    }
public:
    int removeStones(vector<vector<int>>& stones) {
        for(int i=0;i<stones.size();i++){
            xm[stones[i][0]].push_back(i);
            ym[stones[i][1]].push_back(i);
        }
        
        vector<int> grp(stones.size(), -1);
        int nGrp = 0;
        int result = 0;
        
        for(int i=0;i<stones.size();i++){
            if(grp[i] != -1) continue;
            result += (makeGrp(stones, i, grp, nGrp++) - 1);
        }
        return result;
    }
};