class Solution {
public:
    int knightDialer(int n) {
        int MOD = 1e9+7;
        int path[10][3] = { 
            {4, 6, -1}, {6, 8, -1}, {7, 9, -1}, 
            {4, 8, -1}, {0, 3, 9},  {-1, -1, -1}, 
            {0, 1, 7},  {2, 6, -1}, {1, 3, -1}, 
            {2, 4, -1} 
        };
        
        vector<long long> v(10, 1);
        for(int i=0;i<n-1;i++){
            vector<long long> tv(10);
            for(int j=0;j<10;j++){
                long long temp = 0;
                for(int k=0;k<3;k++){
                    if(path[j][k]==-1) break;
                    temp += v[path[j][k]];
                    if(temp >= MOD) temp %= MOD;
                }
                tv[j] = temp;
            }
            v = tv;
        }
        
        long long result = 0;
        for(long long num : v){
            result += num;
            if(result >= MOD) result %= MOD;
        }
        
        return result;
    }
};