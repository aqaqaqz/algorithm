/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int countNodes(TreeNode* root) {
        if(root == NULL) return 0;
        if(root->left==NULL && root->right==NULL) return 1;
        int depth = getDepth(root);
        int result = pow(2, depth-1)-1;
        result += getLastNodeCnt(root, depth-1);
        
        return result;
    }
    
    int getDepth(TreeNode *root){
        if(root == NULL) return 0;
        return 1+getDepth(root->left);
    }
    
    int getLastNodeCnt(TreeNode *root, int depth){
        if(root == NULL) return 0;
        if(depth == 1){
            if(root->right == NULL) return 1;
            return 2;
        }
        
        int left = getDepth(root->left);
        int right = getDepth(root->right);
        
        if(left > right) 
            return getLastNodeCnt(root->left, depth-1);
        else
            return pow(2, depth-1) + getLastNodeCnt(root->right, depth-1);
    }
};