/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
    vector<vector<int>> result;
public:
    vector<vector<int>> pathSum(TreeNode* root, int sum) {
        result.clear();

        vector<int> tempResult;
        makePathSum(root, sum, 0, tempResult);
        
        return result;
    }
    
    void makePathSum(TreeNode *node, int &sum, int preSum, vector<int> &tempResult){
        if(node == NULL) return;
        
        tempResult.push_back(node->val);
        preSum += node->val;
        if(node->left==NULL && node->right==NULL){
            if(sum == preSum) result.push_back(tempResult);
            tempResult.pop_back();
            return;
        }
        makePathSum(node->left, sum, preSum, tempResult);
        makePathSum(node->right, sum, preSum, tempResult);
        tempResult.pop_back();
    }
};