class Solution {
    int getLen(string& s, char c){
        int rst = 0;
        vector<pair<int, int>> v;
        for(int i=0;i<s.size();i++){
            if(s[i] == c){
                pair<int, int> p;
                p.first = i;
                while(i<s.size() && s[i]==c) i++;
                p.second = --i;
                v.push_back(p);
                rst = max(rst, p.second-p.first+1);
            }
        }
        if(v.size()>1) rst++;
        
        for(int i=1;i<v.size();i++){
            if(v[i].first-2 == v[i-1].second){
                int len1 = v[i-1].second-v[i-1].first+1;
                int len2 = v[i].second-v[i].first+1;
                int t = (v.size()>2?1:0);
                rst = max(rst, len1+len2+t);
            }
        }
        
        return rst;
    }
public:
    int maxRepOpt1(string text) {
        int result = 0;
        for(int i=0;i<26;i++){
            char c = 'a'+i;
            result = max(result, getLen(text, c));
        }
        return result;
    }
};