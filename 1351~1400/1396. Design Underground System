class UndergroundSystem {
    unordered_map<string, vector<double>> time;
    unordered_map<int, pair<string, int>> visit;
public:
    UndergroundSystem() {
        
    }
    
    void checkIn(int id, string stationName, int t) {
        visit[id] = make_pair(stationName, t);
    }
    
    void checkOut(int id, string stationName, int t) {
        string sName = visit[id].first;
        double totalTime = t - visit[id].second;
        string key = sName + "-" + stationName;
        if(time.find(key) != time.end()){
            time[key][0] += totalTime;
            time[key][1]++;
        }else
            time[key] = vector<double>{totalTime, 1};
    }
    
    double getAverageTime(string startStation, string endStation) {
        string key = startStation + "-" + endStation;
        return time[key][0]/time[key][1];
    }
};

/**
 * Your UndergroundSystem object will be instantiated and called as such:
 * UndergroundSystem* obj = new UndergroundSystem();
 * obj->checkIn(id,stationName,t);
 * obj->checkOut(id,stationName,t);
 * double param_3 = obj->getAverageTime(startStation,endStation);
 */