class Solution {
public:
    int leastInterval(vector<char>& tasks, int n) {
        n++;
        unordered_map<char, int> m;
        for(char c  : tasks)
            m[c]++;
        
        vector<int> v;
        for(auto iter=m.begin();iter!=m.end();iter++)
            v.push_back(iter->second);
        
        int result = 0;
        while(!v.empty()){
            sort(v.begin(), v.end());
            
            int cnt = 0;
            for(int i=0;i<n;i++){
                int p = v.size()-1-i;
                if(p<0) break;
                cnt++;
                v[p]--;
            }
            sort(v.begin(), v.end(), [](int& a, int& b){
                return a>b;
            });
            while(!v.empty() && v.back()==0) v.pop_back();
            if(!v.empty()) result += n;
            else result += cnt;
        }
        
        return result;
    }
};
