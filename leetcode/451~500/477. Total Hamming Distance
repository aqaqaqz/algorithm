class Solution {
    string myLpad(int n, int s){
        string str = "";
        
        while(n>0){
            if(n%2 == 0) str = "0" + str;
            else str = "1" + str;
            n /= 2;
        }
        while(str.size() != s) str = "0"+str;
        return str;
    }
public:
    int totalHammingDistance(vector<int>& nums) {
        const int s = 32;
        vector<string> strV;
        for(int n : nums) strV.push_back(myLpad(n, s));
        
        vector<pair<int, int>> v(s, pair<int, int>(0, 0));
        for(const string &str : strV){
            for(int i=0;i<s;i++) str[i]=='0'?v[i].first++:v[i].second++;
        }

        int result = 0;
        for(int i=0;i<s;i++) result += (v[i].first*v[i].second);
        
        return result;
    }
};