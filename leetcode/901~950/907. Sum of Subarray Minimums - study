class Solution {
public:
    int sumSubarrayMins(vector<int>& A) {
        const int maxVal = 1e9+7;
        int result = 0;
        vector<int> left(A.size(), 0);
        vector<int> right(A.size(), 0);
        stack<int> s;
        
        for(int i=0;i<A.size();i++){
            while(!s.empty() && A[s.top()]>A[i]){
                left[i] += (1+left[s.top()]);
                s.pop();
            }
            s.push(i);
        }
        while(!s.empty()) s.pop();
        
        for(int i=A.size()-1;i>=0;i--){
            while(!s.empty() && A[s.top()]>=A[i]){
                right[i] += (1+right[s.top()]);
                s.pop();
            }
            s.push(i);
        }
        
        for(int i=0;i<A.size();i++){
            result += (left[i]+1)*(right[i]+1)*A[i];
            result %= maxVal;
        }
        
        return result;
    }    
};