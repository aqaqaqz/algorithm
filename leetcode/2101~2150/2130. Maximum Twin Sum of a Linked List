/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    int pairSum(ListNode* head) {
        int l = 0;
        ListNode* node = head;
        while(node != nullptr){
            l++;
            node = node->next;
        }

        node = head;
        int result = 0;
        vector<int> v;
        while(v.size() < l/2){
            v.push_back(node->val);
            node = node->next;
        }

        while(node != nullptr){
            result = max(result, v.back()+node->val);
            v.pop_back();
            node = node->next;
        }

        return result;
    }
};