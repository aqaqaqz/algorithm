class Solution {
    int getAbleLen(int l, vector<int> p, string& order, int idx){
        int cnt = 0;

        for(int i=idx;i<order.size();i++){
            if(order[i] == 'U') p[0]--;
            if(order[i] == 'D') p[0]++;
            if(order[i] == 'L') p[1]--;
            if(order[i] == 'R') p[1]++;
            
            if(p[0]<0 || p[0]>=n || p[1]<0 || p[1]>=n) break;
            cnt++;
        }

        return cnt;
    }
public:
    vector<int> executeInstructions(int n, vector<int>& startPos, string s) {
        vector<int> result;
        for(int i=0;i<s.size();i++){
            result.push_back(getAbleLen(n, startPos, s, i));
        }

        return result;
    }
};