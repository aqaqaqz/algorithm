class SnapshotArray {
    int snapNo;
    unordered_set<int> setIdx;
    vector<int> arr;
    vector<vector<vector<int>>> snapArr;
public:
    SnapshotArray(int length) {
        arr.resize(length, 0);
        snapArr.resize(length);
        snapNo = 0;
    }
    
    void set(int index, int val) {
        setIdx.insert(index);
        arr[index] = val;
    }
    
    int snap() {
        for(auto iter=setIdx.begin();iter!=setIdx.end();iter++){
            if(snapArr[*iter].size() > 0){
                snapArr[*iter].back()[1] = snapNo-1;
            }
            vector<int> temp = {snapNo, -1, arr[*iter]};
            snapArr[*iter].push_back(temp);
        }
        snapNo++;
        setIdx.clear();
        return snapNo-1;
    }
    
    int get(int idx, int snap_id) {
        vector<vector<int>>& temp = snapArr[idx];
        int s = 0;
        int e = (int)temp.size()-1;
        while(e>=s){
            int m = (s+e)/2;
            if(snap_id>=temp[m][0] && (snap_id<=temp[m][1]||temp[m][1]==-1)) return temp[m][2];
            
            if(temp[m][0] > snap_id) e = m-1;
            else s = m+1;
        }
        return 0;
    }
};

/**
 * Your SnapshotArray object will be instantiated and called as such:
 * SnapshotArray* obj = new SnapshotArray(length);
 * obj->set(index,val);
 * int param_2 = obj->snap();
 * int param_3 = obj->get(index,snap_id);
 */