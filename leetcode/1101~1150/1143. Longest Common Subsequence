class Solution {
    vector<vector<int>> v;
    int getResult(string& t1, string& t2, int p1, int p2){
        if(p1<0 || p2<0) return 0;
        if(v[p1][p2] != -1) return v[p1][p2];
        if(t1[p1] == t2[p2]){
            v[p1][p2] = 1;
            v[p1][p2] += getResult(t1, t2, p1-1, p2-1);
        }else{
            v[p1][p2] = max(getResult(t1, t2, p1-1, p2), getResult(t1, t2, p1, p2-1));
        }
        
        return v[p1][p2];
    }
public:
    int longestCommonSubsequence(string text1, string text2) {
        v.resize(text1.size(), vector<int>(text2.size(), -1));
        return getResult(text1, text2, text1.size()-1, text2.size()-1);
    }
};