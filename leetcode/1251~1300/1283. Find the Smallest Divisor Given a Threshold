class Solution {
    int getRst(vector<int>& n, int d){
        if(d == 0) return 0;
        int sum = 0;
        for(int i=0;i<n.size();i++){
            sum += n[i]/d;
            sum += (n[i]%d!=0?1:0);
        }
        return sum;
    }
public:
    int smallestDivisor(vector<int>& nums, int threshold) {
        long long s = 1;
        long long e = INT_MAX-1;
        long long result = -1;
        while(s<=e){
            int m = (s+e)/2;
            int t = getRst(nums, m);
            if(t<=threshold){
                result = m;
                e = m-1;
            }else
                s = m+1;
        }
        return result;
    }
};