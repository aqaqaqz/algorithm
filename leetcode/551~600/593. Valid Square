class Solution {
    int getDistance(vector<int>& v1, vector<int>& v2){
        int a = v1[0] - v2[0];
        int b = v1[1] - v2[1];
        return a*a+b*b;
    }

    bool check(vector<int>& stand, vector<int>& p1, vector<int>& p2, vector<int>& p3, int len, int dia){
        int lenCnt = 0;
        int diaCnt = 0;
        if(getDistance(stand, p1) == len) lenCnt++;
        else if(getDistance(stand, p1) == dia) diaCnt++;

        if(getDistance(stand, p2) == len) lenCnt++;
        else if(getDistance(stand, p2) == dia) diaCnt++;

        if(getDistance(stand, p3) == len) lenCnt++;
        else if(getDistance(stand, p3) == dia) diaCnt++;

        return (lenCnt==2 && diaCnt==1);
    }
public:
    bool validSquare(vector<int>& p1, vector<int>& p2, vector<int>& p3, vector<int>& p4) {
        int len = min(getDistance(p1, p2), getDistance(p1, p3));
        int dia = max(getDistance(p1, p2), max(getDistance(p1, p3), getDistance(p1, p4)));

        if(!check(p1, p2, p3, p4, len, dia)) return false;
        if(!check(p2, p1, p3, p4, len, dia)) return false;
        if(!check(p3, p1, p2, p4, len, dia)) return false;
        if(!check(p4, p1, p2, p3, len, dia)) return false;

        return true;
    }
};