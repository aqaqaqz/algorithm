/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
    ListNode* reverseNode(ListNode* h, int k){
        k--;
        ListNode* l = h->next;
        while(k--){
            ListNode* n = l->next;
            l->next = n->next;
            n->next = h->next;
            h->next = n;
        }
        return l;
    }
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        if(k<2) return head;
        
        ListNode *result = new ListNode(0);
        result->next = head;
        int cnt = 0;
        while(head != NULL){
            cnt++;
            head = head->next;
        }
        
        ListNode* temp = result;
        for(int i=0;i<cnt/k;i++){
            temp = reverseNode(temp, k);
        }
        
        return result->next;
    }
};