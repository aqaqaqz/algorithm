class Solution {
    int rot;
    int sq;
    pair<int, int> pos;
    map<int, map<int, int>> objM;

    void moveRobot(int len){
        int nx = 0;
        int ny = 0;
        if(rot >= 360) rot %= 360;
        
        if(rot == 0)        ny = 1;
        else if(rot == 90)  nx = 1;
        else if(rot == 180) ny = -1;
        else                nx = -1;
        
        for(int i=0;i<len;i++){
            if(objM[pos.first+nx][pos.second+ny] != 0) break;
            pos.first += nx;
            pos.second += ny;
        }

        sq = max(sq, pos.first*pos.first+pos.second*pos.second);
    }
public:
    Solution(){ 
        rot = 0; 
        sq = 0;
        pos.first = 0;
        pos.second = 0;
    }
    int robotSim(vector<int>& commands, vector<vector<int>>& obstacles) {
        for(vector<int> obj : obstacles)
            objM[obj[0]][obj[1]] = 1;
        
        for(int com : commands){
            if(com == -1)       rot += 90;
            else if(com == -2)  rot += 270;
            else                moveRobot(com);
        }

        return sq;
    }
};