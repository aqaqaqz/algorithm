class Solution {
    vector<vector<long long>> v;
    vector<long long> temp;
    string s2;
public:
    Solution(){
        temp.push_back(0);
        temp.push_back(0);
        v.push_back(temp);
        
        s2 = "";
    }
    string decodeAtIndex(string s, int k) {
        string result = "";
        
        long long idx = 0;
        for(int i=0;i<s.size();){
            while(i<s.size() && isalpha(s.at(i))){ s2+=s.at(i); i++; idx++; }
            int n = 1;
            while(i<s.size() && isdigit(s.at(i))) n*=(s.at(i++)-'0');

            if(n == 0) n=1;
            
            temp.clear();
            temp.push_back(idx);
            temp.push_back(n);
            v.push_back(temp);
            
            idx *= n;
        }
        
        int pos = 0;
        for(int i=v.size()-1;i>0;i--){
            if(v[i][0]!=0) k %= v[i][0];
            if(k==0) k = v[i][0];
            if(k>v[i-1][0]*v[i-1][1] && k<=v[i][0]){
                pos = k-v[i-1][0]*v[i-1][1];
                
                i--;
                for(i;i>0;i--) 
                    pos += (v[i][0]-v[i-1][0]*v[i-1][1]);
                break;
            }
        }
        result += s2.at(pos-1);
        return result;
    }
};