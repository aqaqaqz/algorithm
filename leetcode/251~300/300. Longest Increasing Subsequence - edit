class Solution {
    vector<int> result;
    int findNumPos(int num){
        if(result.empty()) return 0;
        int s = 0;
        int e = (int)result.size()-1;
        int m = 0;
        while(s<=e){
            m = (s+e)/2;
            if(result[m]==num) return m;
            else if(result[m] < num) s = m+1;
            else e = m-1;
        }
        return result[m]<num?(m+1):m;
    }
public:
    int lengthOfLIS(vector<int>& nums) {
        if(nums.empty()) return 0;
        for(int i=0;i<nums.size();i++){
            int pos = findNumPos(nums[i]);
            if(pos>=result.size()) result.push_back(nums[i]);
            else if(result[pos]>nums[i]) result[pos] = nums[i];
        }        
        return result.size();
    }
};