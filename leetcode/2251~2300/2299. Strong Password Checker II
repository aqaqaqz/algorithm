/*
It has at least 8 characters.
It contains at least one lowercase letter.
It contains at least one uppercase letter.
It contains at least one digit.
It contains at least one special character. The special characters are the characters in the following string: "!@#$%^&*()-+".
It does not contain 2 of the same character in adjacent positions (i.e., "aab" violates this condition, but "aba" does not).
*/

class Solution {
    const string specialChar = "!@#$%^&*()-+";
    unordered_set<char> lc;
    unordered_set<char> uc;
    unordered_set<char> d;
    unordered_set<char> sc;

    bool checkValidCharacter(unordered_set<char> s, string& p){
        for(int i=0;i<p.size();i++){
            if(s.find(p[i]) != s.end()) return true;
        }

        return false;
    }

    bool checkValidAdjacent(string& p){
        for(int i=1;i<p.size();i++){
            if(p[i] == p[i-1]) return false;
        }

        return true;
    }
public:
    Solution(){
        for(int i=0;i<26;i++){
            lc.insert(i+'a');
            uc.insert(i+'A');
        }
        for(int i=0;i<10;i++){
            d.insert(i+'0');
        }
        for(int i=0;i<specialChar.size();i++){
            sc.insert(specialChar[i]);
        }
    }

    bool strongPasswordCheckerII(string password) {
        if(password.size() < 8) return false;
        if(checkValidCharacter(lc, password)) return false;
        if(checkValidCharacter(uc, password)) return false;
        if(checkValidCharacter(d, password)) return false;
        if(checkValidCharacter(sc, password)) return false;
        if(checkValidAdjacent(password)) return false;

        return true;
    }
};