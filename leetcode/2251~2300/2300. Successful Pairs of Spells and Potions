class Solution {
    int findIdx(vector<int>& p, long long t){
        int f = 0;
        int e = p.size()-1;
        int m;

        while(f<=e){
            m = (f+e)/2;
            if(p[m] >= t) e = m-1;
            else if(p[m] < t) f = m+1;
        }

        if(p[m] < t) m++;
        return m;
    }
public:
    vector<int> successfulPairs(vector<int>& spells, vector<int>& potions, long long success) {
        sort(potions.begin(), potions.end());

        vector<int> result;
        for(int i=0;i<spells.size();i++){
            long long target = success/spells[i] + (success%spells[i]==0?0:1);
            int cnt = potions.size() - findIdx(potions, target);
            result.push_back(cnt);
        }

        return result;
    }
};