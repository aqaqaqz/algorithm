class Solution {
    public int maximumWhiteTiles(int[][] tiles, int carpetLen) {
        int e = 0;
        int cnt = 0;
        int result = 0;

        Arrays.sort(tiles, new Comparator<int[]>() {
            @Override
            public int compare(int[] a, int[] b) {
                return a[0] - b[0];
            }
        });

        for(int i=0;i<tiles.length;i++){
            int endIndex = tiles[i][0] + carpetLen - 1;

            if(i>0)
                cnt -= (tiles[i-1][1] - tiles[i-1][0] + 1);

            while(e < tiles.length && endIndex >= tiles[e][1]){
                cnt += (tiles[e][1] - tiles[e][0] + 1);
                e++;
            }

            int temp = 0;            
            if(e < tiles.length && endIndex >= tiles[e][0])
                temp = Math.max(endIndex - tiles[e][0] + 1, 0);

            result = Math.max(cnt+temp, result);
        }

        return result;
    }
}