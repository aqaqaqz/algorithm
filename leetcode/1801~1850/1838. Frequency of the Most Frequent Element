class Solution {
private:
    bool checkAble(int i, int l, int k, vector<int>& n, vector<long long>& s){
        if(l > i+1) return false;

        long long need = (long long)n[i] * l;
        long long sum = s[i] - (i-l>=0 ? s[i-l] : 0) + k;

        return sum >= need; 
    }
public:
    int maxFrequency(vector<int>& nums, int k) {
        int result = 1;
        vector<long long> sum(nums.size());

        sort(nums.begin(), nums.end());
        for(int i=0;i<nums.size();i++){
            sum[i] = (nums[i] + (i>0?sum[i-1]:0));
            while(checkAble(i, result+1, k, nums, sum))
                result++;
        }

        return result;
    }
};