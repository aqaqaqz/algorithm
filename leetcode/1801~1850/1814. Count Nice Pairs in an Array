class Solution {
    const int MOD = 1e9 + 7;
    int getRevDif(long long n){
        string str = to_string(n);
        reverse(str.begin(), str.end());
        long long rev = atoll(str.c_str());
        
        return rev-n;
    }
    long long getCombination(long long a, long long b){
        long long rst = a*(a-1)/2;
        return rst%MOD;
    }
public:
    int countNicePairs(vector<int>& nums) {
        unordered_map<int, int> m;
        for(int n : nums) m[getRevDif(n)]++;
        
        int result = 0;
        for(auto iter=m.begin();iter!=m.end();iter++){
            if(iter->second < 2) continue;
            result += getCombination(iter->second, 2);
            result %= MOD;
        }
        
        return result;
    }
};