/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
    bool makeResult(ListNode* l1, ListNode *l2, int c1, int c2){
        if(l1 == NULL) return false;
        bool upper = false;
        int t1 = 0;
        int t2 = 0;
        bool b;
        if(c1 != c2){
            if(c1 > c2){
                t1 = l1->val;
                b = makeResult(l1->next, l2, --c1, c2);
            }else{
                t2 = l2->val;
                b = makeResult(l1, l2->next, c1, --c2);
            }
        }else{
            t1 = l1->val;
            t2 = l2->val;
            b = makeResult(l1->next, l2->next, --c1, --c2);
        }
        
        int temp = t1+t2+(b?1:0);
        if(temp >= 10){
            upper = true;
            temp -= 10;
        }
        l1->val = temp;
        
        return upper;
    }
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        int c1 = 0;
        int c2 = 0;
        ListNode *h1 = l1;
        ListNode *h2 = l2;
        while(l1 != NULL){ l1 = l1->next; c1++; }
        while(l2 != NULL){ l2 = l2->next; c2++; }
        if(c2 > c1){
            ListNode * t = h1;
            h1 = h2;
            h2 = t;
        }
        
        if(makeResult(h1, h2, max(c1, c2), min(c1, c2))){
            ListNode *result = new ListNode(1);
            result->next = h1;
            return result;
        }
        return h1;
    }
};