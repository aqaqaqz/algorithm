class Solution {
    int findPos(vector<vector<int>>& result, vector<int> p){
        if(result.empty()) return 0;
        int cnt = 0;
        int i=0;
        for(i;i<result.size();i++){
            if(p[0] > result[i][0]){
                continue;
            }else{
                if(cnt == p[1]) return i;
                cnt++;
            }
        }
        return i;
    }
    void move(vector<vector<int>>& result, int p){
        result.push_back(vector<int>());
        if(result.size() == p) return;
        for(int i=result.size()-2;i>=p;i--){
            result[i+1] = result[i];
        }
    }
public:
    vector<vector<int>> reconstructQueue(vector<vector<int>>& people) {
        vector<vector<int>> result;
        
        sort(people.begin(), people.end(), [](vector<int> &a, vector<int> &b){
            if(a[1] == b[1]) return a[0]<b[0];
            return a[1] < b[1];
        });
        
        for(vector<int> v : people){
            int pos = findPos(result, v);
            move(result, pos);
            result[pos] = v;
        }

        return result;
    }
};