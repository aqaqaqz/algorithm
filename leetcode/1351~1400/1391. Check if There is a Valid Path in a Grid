class Solution {
public:
    bool hasValidPath(vector<vector<int>>& grid) {
        //dir 1->left
        //dir 2->right
        //dir 3->up
        //dir 4->down
        vector<vector<int>> dir{
            {},
            {1,2},{3,4},{1,4},
            {2,4},{1,3},{2,3}
        };
        
        bool result = false;
        queue<vector<int>> q;
        for(int d : dir[grid[0][0]])
            q.push({0, 0, d});
        while(!q.empty()){
            int h = q.front()[0];
            int w = q.front()[1];
            int d = q.front()[2];
            q.pop();
            
            if(h<0 || h>=grid.size() || w<0 || w>=grid[0].size()) 
                continue;
            int& t = grid[h][w];
            if(t==-1 || (dir[t][0]!=d && dir[t][1]!=d))
                continue;
            
            if(h+1==grid.size() && w+1==grid[0].size()){
                result = true;
                break;
            }
            
            for(int next : dir[t]){
                if(next==1)
                    q.push({h, w-1, 2});
                else if(next==2)
                    q.push({h, w+1, 1});
                else if(next==3)
                    q.push({h-1, w, 4});
                else
                    q.push({h+1, w, 3});
                
            }
            t = -1;
        }
        
        return result;
    }
};