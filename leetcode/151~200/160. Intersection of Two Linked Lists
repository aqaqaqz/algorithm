/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        ListNode *a = headA;
        ListNode *b = headB;
        
        int cnt = 0;
        
        while(true){
            if(a == NULL){
                while(b != NULL){
                    cnt++;
                    b = b->next;
                }
                for(int i=0;i<cnt;i++) headB = headB->next;
                break;
            }else if(b == NULL){
                while(a != NULL){
                    cnt++;
                    a = a->next;
                }
                for(int i=0;i<cnt;i++) headA = headA->next;
                break;
            }
            if(a->val == b->val) return a;
            a = a->next;
            b = b->next;
        }

        while(headA != NULL && headB != NULL){
            if(headA->val == headB->val) return headA;
            headA = headA->next;
            headB = headB->next;
        }
        return NULL;
    }
};