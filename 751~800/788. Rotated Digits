class Solution {
    unordered_map<int, int> m;
    bool checkDigit(int n, int maxVal){
        int ori = n;
        vector<int> v;
        while(n!=0){
            v.push_back(n%10);
            n /= 10;
        }
        
        reverse(v.begin(), v.end());
        int ten = 1;
        int temp = 0;
        for(int i=v.size()-1;i>=0;i--){
            if(m.find(v[i])==m.end()) return false;
            temp += ten*m[v[i]];
            ten *= 10;
        }
        
        return (ori != temp);
    }
public:
    int rotatedDigits(int N) {
        m[0] = 0;
        m[1] = 1;
        m[2] = 5;
        m[5] = 2;
        m[6] = 9;
        m[8] = 8;
        m[9] = 6;
        
        int result = 0;
        for(int i=1;i<=N;i++){
            if(checkDigit(i, N)) result++;
        }
        
        return result;
    }
};