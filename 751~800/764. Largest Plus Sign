class Solution {
    vector<vector<vector<int>>> c;
    vector<vector<int>> m;
    vector<pair<int, int>> dir;
    int n;
    
    int getLen(int h, int w, int d){
        pair<int, int> p = dir[d];
        h += p.first;
        w += p.second;
        
        if(h<0 || w<0 || h>=n || w>=n) return 0;
        if(c[h][w][d] != -1) return c[h][w][d];
        c[h][w][d] = 1 + getLen(h, w, d);
        return c[h][w][d];
    }
public:
    int orderOfLargestPlusSign(int N, vector<vector<int>>& mines) {
        n = N;
        c.resize(N, vector<vector<int>>(N, vector<int>(4, -1)));
        m.resize(N, vector<int>(N, 1));
        dir.push_back(make_pair(0, -1));
        .push_back(make_pair(1, 0));
        d.push_back(make_pair(0, 1));
        d.push_back(make_pair(-1, 0));
        
        for(const vector<int>& v : mines) m[v[0]][v[1]] = 0;
        int result = 0;
        for(int h=0;h<N;h++){
            for(int w=0;w<N;w++){
                int len = INT_MAX;
                for(int i=0;i<4;i++){
                    len = min(len, getLen(h, w, i));
                }
                result = max(result, len);
            }
        }
        return result;
    }
};