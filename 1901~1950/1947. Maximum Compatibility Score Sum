class Solution {
    int getScore(const vector<int>& v1, const vector<int>& v2){
        int score = 0;
        for(int i=0;i<v1.size();i++)
            score += (v1[i]==v2[i]?1:0);
        return score;
    }

    int getMaxScore(vector<vector<int>>& s, vector<vector<int>>& m, int p, vector<bool>& use){
        if(p == s.size()) return 0;

        int score = 0;
        for(int i=0;i<use.size();i++){
            if(use[i]) continue;

            use[i] = true;
            score = max(score, getMaxScore(s, m, p+1, use)+getScore(s[p], m[i]));
            use[i] = false;
        }

        return score;
    }
public:
    int maxCompatibilitySum(vector<vector<int>>& students, vector<vector<int>>& mentors) {
        vector<bool> use(mentors.size(), false);
        return getMaxScore(students, mentors, 0, use);
    }
};