class Solution {
    vector<vector<int>> result;
    vector<int> temp;
public:
    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
        result.clear();
        temp.clear();

        sort(nums.begin(), nums.end());
        
        result.push_back(temp);
        makeSubset(0, nums);
        
        sort(result.begin(), result.end());
        result.erase(unique(result.begin(), result.end()), result.end());
        
        return result;
    }
    
    void makeSubset(int pos, vector<int>& nums){
        if(temp.size()>0) result.push_back(temp);
        if(pos == nums.size()) return;
        
        temp.push_back(nums[pos]);
        makeSubset(pos+1, nums);
        
        temp.pop_back();
        makeSubset(pos+1, nums);
    }
};