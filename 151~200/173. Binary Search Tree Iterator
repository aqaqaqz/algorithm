class BSTIterator {
private:
    vector<TreeNode*> v;
    
    void makeNodeList(TreeNode *node){
        if(node ==  NULL) return;
        v.push_back(node);
        makeNodeList(node->left);
    }
public:
    BSTIterator(TreeNode *root) {
        makeNodeList(root);
    }

    /** @return whether we have a next smallest number */
    bool hasNext() {
        if(v.size()>0) return true;
        return false;
    }

    /** @return the next smallest number */
    int next() {
        TreeNode *temp = v.back();
        int val = temp->val;
        
        v.pop_back();
        makeNodeList(temp->right);
        
        return val;
    }
};